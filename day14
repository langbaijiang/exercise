1.三数之和
emm，很麻烦的一道题。难点在于如何让确保最终的结果不重复。官方给的题解是，先排序数组，然后确保a<=b<=c,并且每个要的结果在它的循环过程中不与前面数重合，而且，他还优化了时间复杂度，让b从头c从尾，
这样节省了时间复杂度。
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int n=nums.size();
        sort(nums.begin(),nums.end());
        vector<vector<int>> result;
        for(int first=0;first<n;first++){
            int third=n-1,target=-nums[first];
        if(first>0&&nums[first]==nums[first-1])continue;
        for(int second=first+1;second<n;second++){
            if(second>first+1&&nums[second]==nums[second-1])continue;
            while(second<third&&nums[second]+nums[third]>target)third--;
            if(second==third)break;
            if(nums[second]+nums[third]==target)result.push_back({nums[first],nums[second],nums[third]});
        }
        }
        return result;
    }
};

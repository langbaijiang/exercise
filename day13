1.Z字形变换
将一个给定字符串 s 根据给定的行数 numRows ，以从上往下、从左到右进行 Z 字形排列。
大佬给的题解是，按照题目将给的s遍历到新的字符串数组里面，最后遍历数组输出。最妙的是给的flag判定变量，完美模拟了z字形的走向。
class Solution {
public:
    string convert(string s, int numRows) {
        if (numRows<2)return s;
        vector<string> result(numRows);
        int i=0,flag=-1;
        for(auto c:s){
            result[i].push_back(c);
            if(i==0||i==numRows-1)flag=-flag;
            i+=flag;
        }
        string temp;
        for(auto c:result)temp+=c;
        return temp;
    }
};
2.俩数之和
给你一个下标从 1 开始的整数数组 numbers ，该数组已按非递减顺序排列，请你从数组中找出满足相加之和等于目标数 target 的两个数。
大佬讲解的十分透彻，坐标图都上来了，很形象。没啥好解读的。
class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target) {
        int i=0,j=numbers.size()-1;
        while(i<j){
            if(numbers[i]+numbers[j]<target)i++;
            else if(numbers[i]+numbers[j]>target)j--;
            else return vector<int>{i+1,j+1};
        }
        return vector<int>{-1,-1};
    }
};
3.盛最多水的容器
给定一个长度为 n 的整数数组 height 。有 n 条垂线，第 i 条线的两个端点是 (i, 0) 和 (i, height[i]) 。找出其中的两条线，使得它们与 x 轴共同构成的容器可以容纳最多的水。
返回容器可以储存的最大水量。
这题开始毫无头绪，直接看题解。题解这么讲的——长板向内移，一定变小，但短板向内不一定，所以移动短板，直到俩者相遇。
class Solution {
public:
    int maxArea(vector<int>& height) {
        int result=0;
        int temp;
        int n=height.size();
        int i=0,j=n-1;
        while(i<j){
            if(height[i]<=height[j]){temp=height[i]*(j-i);i++;}
            else {temp=height[j]*(j-i);j--;}
            result=max(temp,result);
        }
        return result;
    }
};

——————————————————————————————————————————
2025.3.28
咳咳，昨天因为一些不可控的原因（放学迟，晚上还有计组和数据库作业），就没刷题，罪过罪过。
